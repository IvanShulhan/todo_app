{"version":3,"sources":["api/api.js","components/TodoItem.jsx","components/TodoList.jsx","components/TodosFilter.jsx","components/TodoApp.jsx","components/Info.jsx","components/AddUserFormInput.jsx","components/AddUserForm.jsx","components/UsersList.jsx","components/WelcomeBlock.jsx","App.jsx","index.js"],"names":["request","url","option","fetch","then","res","ok","Error","json","post","data","method","headers","body","JSON","stringify","changeTodo","todoId","value","deleteTodo","TodoItem","React","memo","item","useContext","TodoContent","setTodos","setToggleAll","useState","isEditing","setIsEditing","newTitle","setNewTitle","changeTodoTitle","id","curr","map","todo","title","className","classNames","completed","editing","onDoubleClick","type","checked","onChange","htmlFor","onClick","filter","autoFocus","event","target","onBlur","onKeyDown","code","TodoList","items","Fragment","TodosFilter","sortParam","setSortParam","href","selected","createContext","TodoApp","todos","todoTitle","setTodoTitle","toggleAll","isPressSubmit","setIsPressSubmit","filterParam","setFilterParam","useEffect","getTodos","todosLeft","useMemo","count","reduce","acc","length","setToggleAllTodos","contextValue","changeIsPressSubmit","filteredTodos","onSubmit","userId","preventDefault","placeholder","disabled","Provider","Info","name","AddUserFormInput","property","changeUser","condition","isSubmitted","description","emailValidRegEx","phoneValidRegEx","AddUserForm","setNewUser","setUser","storageKey","setIsSubmitted","username","email","phone","user","key","test","createUser","list","parse","localStorage","getItem","setItem","UsersList","setIsSavedList","usersList","setUsersList","chooseUser","getUser","WelcomeBlock","setIsChecked","App","isChecked","isSavedList","STORAGE_KEY","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46e8268d.chunk.js","sourcesContent":["// eslint-disable-next-line no-unused-vars\nconst BASE_URL = 'https://mate.academy/students-api';\n\nconst request = (url, option) => fetch(`${BASE_URL}${url}`, option)\n  .then((res) => {\n    if (!res.ok) {\n      throw new Error('Problem with loading data...');\n    }\n\n    return res.json();\n  });\n\nexport const getTodos = id => request(`/todos?userId=${id}`);\n\nconst post = (url, data) => (\n  request(url, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  })\n);\n\nexport const getUser = id => request(`/users/${id}`);\n\nexport const createUser = (\n  name, username, email, phone,\n) => post('/users', {\n  name,\n  username,\n  email,\n  phone,\n});\n\nexport const createTodo = (title, userId) => post('/todos', {\n  title,\n  userId,\n  completed: false,\n});\n\nconst patch = (url, data) => request(url, {\n  method: 'PATCH',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(data),\n});\n\nexport const changeTodo = (todoId, value) => {\n  patch(`/todos/${todoId}`, value);\n};\n\nexport const deleteTodo = todoId => request(\n  `/todos/${todoId}`,\n  { method: 'DELETE' },\n);\n","import React, { useContext, useState } from 'react';\nimport classNames from 'classnames';\nimport { changeTodo, deleteTodo } from '../api/api';\n\n// eslint-disable-next-line import/no-cycle\nimport { TodoContent } from './TodoApp';\n\nexport const TodoItem = React.memo(\n  ({ item }) => {\n    const { setTodos, setToggleAll } = useContext(TodoContent);\n    const [isEditing, setIsEditing] = useState(false);\n    const [newTitle, setNewTitle] = useState('');\n\n    const setTodoStatus = (id) => {\n      setTodos(curr => curr.map((todo) => {\n        if (todo.id === id) {\n          if (todo.completed) {\n            setToggleAll(false);\n          }\n\n          changeTodo(id, { completed: !todo.completed });\n\n          return { ...todo, completed: !todo.completed };\n        }\n\n        return todo;\n      }));\n    };\n\n    const changeTodoTitle = (id) => {\n      setTodos(curr => curr.map((todo) => {\n        if (todo.id === item.id) {\n          changeTodo(id, { title: newTitle });\n\n          return { ...todo, title: newTitle };\n        }\n\n        return todo;\n      }));\n    };\n\n    const removeTodo = (id) => {\n      setTodos(curr => curr.filter((todo) => {\n        if (todo.id === id) {\n          deleteTodo(id);\n        }\n\n        return todo.id !== id;\n      }));\n    };\n\n    return (\n      <li\n        className={classNames({\n          completed: item.completed,\n          editing: isEditing,\n        })}\n        onDoubleClick={() => {\n          setIsEditing(true);\n        }}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id=\"toggle-view\"\n            checked={item.completed}\n            onChange={() => {\n              setTodoStatus(item.id);\n            }}\n          />\n          <label htmlFor=\"toggle-view\">{item.title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => {\n              removeTodo(item.id);\n            }}\n          />\n        </div>\n        {isEditing && (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={newTitle}\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus\n          onChange={event => setNewTitle(event.target.value)}\n          onBlur={(event) => {\n            if (newTitle) {\n              changeTodoTitle(item.id);\n              setNewTitle('');\n              setIsEditing(false);\n            } else {\n              setNewTitle('');\n              setIsEditing(false);\n            }\n          }}\n          onKeyDown={(event) => {\n            if (event.code === 'Enter' && newTitle) {\n              changeTodoTitle(item.id);\n              setNewTitle('');\n              setIsEditing(false);\n            }\n\n            if (event.code === 'Escape') {\n              setNewTitle('');\n              setIsEditing(false);\n            }\n          }}\n        />\n        )}\n      </li>\n    );\n  },\n);\n","import React from 'react';\n// eslint-disable-next-line import/no-cycle\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ items }) => (\n  <ul className=\"todo-list\">\n    {items.map(item => (\n      <React.Fragment key={item.id}>\n        <TodoItem item={item} />\n      </React.Fragment>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport const TodosFilter = ({ sortParam, setSortParam }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={classNames({ selected: sortParam === 'all' })}\n        onClick={() => setSortParam('all')}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={classNames({ selected: sortParam === 'active' })}\n        onClick={() => setSortParam('active')}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={classNames({ selected: sortParam === 'completed' })}\n        onClick={() => setSortParam('completed')}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n","import React, { useEffect, useMemo, useState } from 'react';\n// eslint-disable-next-line import/no-cycle\nimport { TodoList } from './TodoList';\nimport { getTodos, createTodo, changeTodo, deleteTodo } from '../api/api';\nimport { TodosFilter } from './TodosFilter';\n\nexport const TodoContent = React.createContext([]);\n\nexport const TodoApp = React.memo(\n  ({ id }) => {\n    const [todos, setTodos] = useState([]);\n    const [todoTitle, setTodoTitle] = useState('');\n    const [toggleAll, setToggleAll] = useState(false);\n    const [isPressSubmit, setIsPressSubmit] = useState(false);\n    const [filterParam, setFilterParam] = useState('all');\n\n    useEffect(() => {\n      if (id) {\n        getTodos(id)\n          .then(setTodos);\n      }\n    }, [id, isPressSubmit]);\n\n    const setToggleAllTodos = (count) => {\n      if (count === todos.length && todos.length > 0) {\n        setToggleAll(true);\n      }\n\n      if (count === 0) {\n        setToggleAll(false);\n      }\n    };\n\n    const todosLeft = useMemo(() => {\n      const count = (\n        todos.reduce((acc, todo) => (todo.completed ? acc + 1 : acc), 0)\n      );\n\n      setToggleAllTodos(count);\n\n      return count;\n    }, [todos]);\n\n    const toggleAllTodos = () => {\n      if (toggleAll) {\n        setTodos(curr => curr.map((todo) => {\n          if (todo.completed) {\n            changeTodo(todo.id, { completed: false });\n\n            return { ...todo, completed: false };\n          }\n\n          setToggleAll(false);\n\n          return todo;\n        }));\n      } else {\n        setTodos(curr => curr.map((todo) => {\n          if (!todo.completed) {\n            changeTodo(todo.id, { completed: true });\n\n            return { ...todo, completed: true };\n          }\n\n          setToggleAll(true);\n\n          return todo;\n        }));\n      }\n    };\n\n    const deleteCompleted = () => {\n      setTodos(curr => curr.filter((todo) => {\n        if (todo.completed) {\n          deleteTodo(todo.id);\n        }\n\n        return !todo.completed;\n      }));\n    };\n\n    const contextValue = { todos, setTodos, setToggleAll };\n\n    const changeIsPressSubmit = () => {\n      setIsPressSubmit(curr => !curr);\n    };\n\n    const filteredTodos = useMemo(() => {\n      switch (filterParam) {\n        case 'active':\n          return todos.filter(todo => !todo.completed);\n        case 'completed':\n          return todos.filter(todo => todo.completed);\n        default:\n          return todos;\n      }\n    }, [filterParam, todos]);\n\n    return (\n      <>\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <form onSubmit={(event) => {\n            event.preventDefault();\n\n            if (todoTitle) {\n              setTodoTitle('');\n              createTodo(todoTitle, id)\n                .then(changeIsPressSubmit);\n            }\n          }}\n          >\n            <input\n              type=\"text\"\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={todoTitle}\n              onChange={({ target }) => {\n                setTodoTitle(target.value);\n              }}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            disabled={todos.length === 0}\n            checked={toggleAll}\n            onChange={toggleAllTodos}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoContent.Provider value={contextValue}>\n            <TodoList items={filteredTodos} />\n          </TodoContent.Provider>\n\n        </section>\n\n        {todos.length > 0 && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {todosLeft > 0 && `${todosLeft} ${todosLeft > 1 ? 'items' : 'item'} left`}\n            </span>\n\n            <TodosFilter\n              sortParam={filterParam}\n              setSortParam={setFilterParam}\n            />\n\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={deleteCompleted}\n            >\n              {todosLeft > 0 && 'Clear completed'}\n            </button>\n          </footer>\n        )}\n\n      </>\n    );\n  },\n);\n","import React from 'react';\n\nexport const Info = ({ name }) => (\n  <div className=\"info App-info\">\n    <h3 className=\"info-title\">\n      by\n      {' '}\n      {name || '...'}\n    </h3>\n  </div>\n);\n","import React from 'react';\n\nexport const AddUserFormInput = ({\n  property,\n  value,\n  changeUser,\n  condition,\n  isSubmitted,\n  description,\n}) => (\n  <label htmlFor={value}>\n    <h4 className=\"add-user-form__input-title\">\n      {value}\n    </h4>\n    <input\n      className=\"add-user-form__input\"\n      type=\"text\"\n      id={value}\n      placeholder={`Enter your ${value}`}\n      value={property}\n      onChange={({ target }) => {\n        changeUser(target, value, condition);\n      }}\n    />\n    {!condition && isSubmitted && (\n      <span className=\"add-user-form__input-error-message\">\n        {`Invalid ${value} ${description}`}\n      </span>\n    )}\n  </label>\n);\n","import React, { useState } from 'react';\nimport { createUser } from '../api/api';\nimport '../styles/add-user-form.css';\nimport { AddUserFormInput } from './AddUserFormInput';\n\nconst emailValidRegEx = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/;\nconst phoneValidRegEx = /[0-9]{9}/;\n\nexport const AddUserForm = ({ setUser: setNewUser, storageKey }) => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [user, setUser] = useState({\n    name: '',\n    username: '',\n    email: '',\n    phone: '',\n  });\n\n  const changeUser = (target, key) => {\n    setUser(curr => ({\n      ...curr,\n      [key]: target.value,\n    }));\n  };\n\n  return (\n    <form\n      className=\"add-user-form\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        setIsSubmitted(true);\n        const { name, username, email, phone } = user;\n\n        if (\n          name.length >= 3\n            && username.length >= 3\n            && emailValidRegEx.test(email)\n            && phoneValidRegEx.test(phone)\n        ) {\n          createUser(name, username, email, phone).then((res) => {\n            setNewUser(res);\n            const list = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n            localStorage.setItem(storageKey, JSON.stringify([\n              ...list,\n              {\n                id: res.id,\n                name: res.name,\n              },\n            ]));\n          });\n          setUser({\n            name: '',\n            username: '',\n            email: '',\n            phone: '',\n          });\n          setIsSubmitted(false);\n        }\n      }}\n    >\n      <h3 className=\"add-user-form__title\">\n        Add user form\n      </h3>\n      <AddUserFormInput\n        property={user.name}\n        value=\"name\"\n        changeUser={changeUser}\n        condition={user.name.length >= 3}\n        isSubmitted={isSubmitted}\n        description=\"(min 3 characters)\"\n      />\n      <AddUserFormInput\n        property={user.username}\n        value=\"username\"\n        changeUser={changeUser}\n        condition={user.username.length >= 3}\n        isSubmitted={isSubmitted}\n        description=\"(min 3 characters)\"\n      />\n      <AddUserFormInput\n        property={user.email}\n        value=\"email\"\n        changeUser={changeUser}\n        condition={emailValidRegEx.test(user.email)}\n        isSubmitted={isSubmitted}\n        description=\"address\"\n      />\n      <AddUserFormInput\n        property={user.phone}\n        value=\"phone\"\n        changeUser={changeUser}\n        condition={phoneValidRegEx.test(user.phone)}\n        isSubmitted={isSubmitted}\n        description=\"number (9 digits)\"\n      />\n      <button\n        className=\"add-user-form__button\"\n        type=\"submit\"\n      >\n        Create user\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../api/api';\nimport '../styles/userslist.css';\n\nexport const UsersList = ({ storageKey, setUser, setIsSavedList }) => {\n  const [usersList, setUsersList] = useState([]);\n\n  useEffect(() => {\n    const list = JSON.parse(localStorage.getItem(storageKey) || '[]');\n\n    setUsersList(list);\n  }, []);\n\n  const chooseUser = (id) => {\n    getUser(id).then(setUser);\n  };\n\n  return (\n    <ul className=\"users-list\">\n      {usersList.length ? (\n        usersList.map(item => (\n          <li\n            className=\"users-list__item\"\n            key={item.id}\n          >\n            <button\n              type=\"button\"\n              onClick={() => chooseUser(item.id)}\n            >\n              {item.name}\n            </button>\n          </li>\n        ))\n      ) : (\n        <div className=\"users-list__info\">\n          <span className=\"users-list__info-text\">\n            There are no users with todo list yet\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => setIsSavedList(false)}\n          >\n            Create new user\n          </button>\n        </div>\n      )}\n    </ul>\n  );\n};\n","import React from 'react';\nimport '../styles/welcome-block.css';\n\nexport const WelcomeBlock = ({ setIsChecked, setIsSavedList }) => (\n  <div className=\"welcome-block app__welcome-block\">\n    <h3 className=\"welcome-block__title\">\n      Hi, wellcome!\n    </h3>\n    <div className=\"welcome-block__question\">\n      <h3 className=\"welcome-block__question-title\">\n        Did you have saved todo list?\n      </h3>\n      <div className=\"welcome-block__question-buttons\">\n        <button\n          type=\"button\"\n          className=\"welcome-block__question-button\"\n          onClick={() => {\n            setIsChecked(true);\n            setIsSavedList(true);\n          }}\n        >\n          Yes\n        </button>\n        <button\n          type=\"button\"\n          className=\"welcome-block__question-button\"\n          onClick={() => {\n            setIsChecked(true);\n          }}\n        >\n          No\n        </button>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useState } from 'react';\nimport { TodoApp } from './components/TodoApp';\nimport { Info } from './components/Info';\nimport { AddUserForm } from './components/AddUserForm';\nimport { UsersList } from './components/UsersList';\nimport { WelcomeBlock } from './components/WelcomeBlock';\nimport './app.css';\n\nexport const App = () => {\n  const [user, setUser] = useState(null);\n  const [isChecked, setIsChecked] = useState(false);\n  const [isSavedList, setIsSavedList] = useState(false);\n\n  const STORAGE_KEY = 'todoListStorageKey';\n\n  return (\n    <div className=\"app\">\n      {!isChecked && (\n        <WelcomeBlock\n          setIsChecked={setIsChecked}\n          setIsSavedList={setIsSavedList}\n        />\n      )}\n\n      {!user && isChecked && (\n        isSavedList ? (\n          <UsersList\n            setUser={setUser}\n            storageKey={STORAGE_KEY}\n            setIsSavedList={setIsSavedList}\n          />\n        ) : (\n          <AddUserForm\n            setUser={setUser}\n            storageKey={STORAGE_KEY}\n          />\n        ))}\n\n      {user && (\n        <div className=\"todoapp-wrapper\">\n          <section className=\"todoapp\">\n            <TodoApp id={user.id} />\n          </section>\n          <Info name={user.name} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}